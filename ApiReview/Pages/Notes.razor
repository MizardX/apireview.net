@page "/notes"
@inject ApiReviewNoteService NoteService
@using ApiReview.Data;

<div class="form-group">
    <input class="form-control" type="text" placeholder="Date" @bind="DateTimeText">
</div>

<div class="d-flex flex-row flex-wrap">
    <div class="p-2 @(_selectedVideo == null ? "yt-video-selected" : null)" @onclick="@(e => SelectVideoAsync(null))">
        <div class="yt-video">
            <div style="width: 320px; height: 180px; background: lightgray">
            </div>
            <div class="mt-2 yt-video-title">
                None
            </div>
        </div>
    </div>
    @foreach (var video in _videos)
    {
        <div class="p-2 @(_selectedVideo == video ? "yt-video-selected" : null)" @onclick="@(e => SelectVideoAsync(video))">
            <div class="yt-video">
                <div><img src="@video.ThumbnailUrl" /></div>
                <div class="mt-2 yt-video-title">
                    <a href="@video.Url">@video.Title</a>
                </div>
                <div class="text-muted text-sm-left">
                    @video.StartDateTime.FormatAge()
                </div>
            </div>
        </div>
    }
</div>


@if (_loadingSummary)
{
    <div class="ml-1 mt-4 mb-4">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading issues...</span>
        </div>
    </div>
}
else if (_summary != null)
{
    <div class="gh-issue-list">
        @foreach (var item in _summary.Items)
        {
            <div class="gh-issue-cell">
                <input type="checkbox" checked />
                <a class="gh-issue-title" href="@item.Feedback.Issue.Url">@item.Feedback.Issue.Title</a>
                <span>
                    @foreach (var label in item.Feedback.Issue.Labels)
                    {
                        <span class="gh-label"
                              style="background: @("#" + label.BackgroundColor); color: @label.ForegroundColor">@label.Name</span>
                        }
                </span>
                <div class="gh-details-cell">
                    <strong><a href="@item.Feedback.FeedbackUrl">@item.Feedback.FeedbackStatus</a></strong>
                    @item.Feedback.Issue.DetailText
                </div>
            </div>
        }
    </div>

    <button class="btn btn-primary">Share Notes</button>
}

@code
{
    private IReadOnlyList<ApiReviewVideo> _videos = Array.Empty<ApiReviewVideo>();
    private ApiReviewVideo _selectedVideo;

    private bool _loadingSummary;
    private ApiReviewSummary _summary;

    private string DateTimeText { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DateTimeText = DateTime.Now.Date.ToString("yyyy-MM-dd");
        _videos = await NoteService.GetVideos(DateTimeOffset.Now.Date);
    }

    private async Task SelectVideoAsync(ApiReviewVideo video)
    {
        _selectedVideo = video;
        _loadingSummary = true;
        if (video != null)
        {
            _summary = await NoteService.GetByVideo(video.Id);
            _loadingSummary = false;
        }
    }
}