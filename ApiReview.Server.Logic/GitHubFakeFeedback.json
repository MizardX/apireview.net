[
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 34587,
      "IdFull": "dotnet/runtime#34587",
      "Title": "Add empty X64/Arm64 nested classes to some System.Runtime.Intrinsics",
      "Author": "EgorBo",
      "CreatedAt": "2020-04-06T14:11:49+00:00",
      "DetailText": "dotnet/runtime#34587 84 days ago by EgorBo",
      "Url": "https://github.com/dotnet/runtime/issues/34587",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "area-System.Runtime.Intrinsics",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "breaking-change",
          "BackgroundColor": "ffa500",
          "Description": "Issue or PR that represents a breaking API or functional change over a prerelease.",
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T17:22:08+00:00",
    "FeedbackId": "649714324",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/34587#issuecomment-649714324",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "* Good point\r\n* When inheriting, we always should also define all nested types and define \u0060IsSupported\u0060 the appropriately, even if they don\u0027t define any other members.\r\n* (this will probably require more nested types than listed below)\r\n\r\n\u0060\u0060\u0060C#\r\n[Intrinsic]\r\n[CLSCompliant(false)]\r\npublic partial class Sha1 : ArmBase\r\n{\r\n    public abstract class Arm64 : ArmBase.Arm64;\r\n    {\r\n        public static new bool IsSupported =\u003E Sha1.IsSupported \u0026\u0026 IntPtr.Size == 8;\r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=0h0m0s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 936,
      "IdFull": "dotnet/runtime#936",
      "Title": "Add System.Numerics.Half 16 bit floating point number conforming to IEEE 754:2008 binary16",
      "Author": "4creators",
      "CreatedAt": "2017-12-04T23:39:56+00:00",
      "DetailText": "dotnet/runtime#936 3 years ago by 4creators",
      "Url": "https://github.com/dotnet/runtime/issues/936",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "area-System.Numerics",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T17:38:01+00:00",
    "FeedbackId": null,
    "FeedbackAuthor": "bartonjs",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/936",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": null,
    "VideoUrl": null
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 33532,
      "IdFull": "dotnet/runtime#33532",
      "Title": "[Arm64] Store Pair of SIMD\u0026FP registers",
      "Author": "echesakovMSFT",
      "CreatedAt": "2020-03-12T21:33:26+00:00",
      "DetailText": "dotnet/runtime#33532 108 days ago by echesakovMSFT",
      "Url": "https://github.com/dotnet/runtime/issues/33532",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "arch-arm64",
          "BackgroundColor": "eb6420",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "area-System.Runtime.Intrinsics",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T17:41:23+00:00",
    "FeedbackId": "649724378",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/33532#issuecomment-649724378",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "\u0060\u0060\u0060C#\r\nnamespace System.Runtime.Intrinsics.Arm\r\n{\r\n    partial class AdvSimd.Arm64\r\n    {\r\n        public static unsafe void StorePair(byte* address, Vector64\u003Cbyte\u003E value1, Vector64\u003Cbyte\u003E value2);\r\n        public static unsafe void StorePair(double* address, Vector64\u003Cdouble\u003E value1, Vector64\u003Cdouble\u003E value2);\r\n        public static unsafe void StorePair(short* address, Vector64\u003Cshort\u003E value1, Vector64\u003Cshort\u003E value2);\r\n        public static unsafe void StorePair(int* address, Vector64\u003Cint\u003E value1, Vector64\u003Cint\u003E value2);\r\n        public static unsafe void StorePair(long* address, Vector64\u003Clong\u003E value1, Vector64\u003Clong\u003E value2);\r\n        public static unsafe void StorePair(sbyte* address, Vector64\u003Csbyte\u003E value1, Vector64\u003Csbyte\u003E value2);\r\n        public static unsafe void StorePair(float* address, Vector64\u003Cfloat\u003E value1, Vector64\u003Cfloat\u003E value2);\r\n        public static unsafe void StorePair(ushort* address, Vector64\u003Cushort\u003E value1, Vector64\u003Cushort\u003E value2);\r\n        public static unsafe void StorePair(uint* address, Vector64\u003Cuint\u003E value1, Vector64\u003Cuint\u003E value2);\r\n        public static unsafe void StorePair(ulong* address, Vector64\u003Culong\u003E value1, Vector64\u003Culong\u003E value2);\r\n        public static unsafe void StorePair(byte* address, Vector128\u003Cbyte\u003E value1, Vector128\u003Cbyte\u003E value2);\r\n        public static unsafe void StorePair(double* address, Vector128\u003Cdouble\u003E value1, Vector128\u003Cdouble\u003E value2);\r\n        public static unsafe void StorePair(short* address, Vector128\u003Cshort\u003E value1, Vector128\u003Cshort\u003E value2);\r\n        public static unsafe void StorePair(int* address, Vector128\u003Cint\u003E value1, Vector128\u003Cint\u003E value2);\r\n        public static unsafe void StorePair(long* address, Vector128\u003Clong\u003E value1, Vector128\u003Clong\u003E value2);\r\n        public static unsafe void StorePair(sbyte* address, Vector128\u003Csbyte\u003E value1, Vector128\u003Csbyte\u003E value2);\r\n        public static unsafe void StorePair(float* address, Vector128\u003Cfloat\u003E value1, Vector128\u003Cfloat\u003E value2);\r\n        public static unsafe void StorePair(ushort* address, Vector128\u003Cushort\u003E value1, Vector128\u003Cushort\u003E value2);\r\n        public static unsafe void StorePair(uint* address, Vector128\u003Cuint\u003E value1, Vector128\u003Cuint\u003E value2);\r\n        public static unsafe void StorePair(ulong* address, Vector128\u003Culong\u003E value1, Vector128\u003Culong\u003E value2);\r\n\r\n        public static unsafe void StorePairScalar(int* address, Vector64\u003Cint\u003E value1, Vector64\u003Cint\u003E value2);\r\n        public static unsafe void StorePairScalar(float* address, Vector64\u003Cfloat\u003E value1, Vector64\u003Cfloat\u003E value2);\r\n        public static unsafe void StorePairScalar(uint* address, Vector64\u003Cuint\u003E value1, Vector64\u003Cuint\u003E value2);\r\n\r\n        public static unsafe void StorePairNonTemporal(byte* address, Vector64\u003Cbyte\u003E value1, Vector64\u003Cbyte\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(double* address, Vector64\u003Cdouble\u003E value1, Vector64\u003Cdouble\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(short* address, Vector64\u003Cshort\u003E value1, Vector64\u003Cshort\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(int* address, Vector64\u003Cint\u003E value1, Vector64\u003Cint\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(long* address, Vector64\u003Clong\u003E value1, Vector64\u003Clong\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(sbyte* address, Vector64\u003Csbyte\u003E value1, Vector64\u003Csbyte\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(float* address, Vector64\u003Cfloat\u003E value1, Vector64\u003Cfloat\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(ushort* address, Vector64\u003Cushort\u003E value1, Vector64\u003Cushort\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(uint* address, Vector64\u003Cuint\u003E value1, Vector64\u003Cuint\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(ulong* address, Vector64\u003Culong\u003E value1, Vector64\u003Culong\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(byte* address, Vector128\u003Cbyte\u003E value1, Vector128\u003Cbyte\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(double* address, Vector128\u003Cdouble\u003E value1, Vector128\u003Cdouble\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(short* address, Vector128\u003Cshort\u003E value1, Vector128\u003Cshort\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(int* address, Vector128\u003Cint\u003E value1, Vector128\u003Cint\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(long* address, Vector128\u003Clong\u003E value1, Vector128\u003Clong\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(sbyte* address, Vector128\u003Csbyte\u003E value1, Vector128\u003Csbyte\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(float* address, Vector128\u003Cfloat\u003E value1, Vector128\u003Cfloat\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(ushort* address, Vector128\u003Cushort\u003E value1, Vector128\u003Cushort\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(uint* address, Vector128\u003Cuint\u003E value1, Vector128\u003Cuint\u003E value2);\r\n        public static unsafe void StorePairNonTemporal(ulong* address, Vector128\u003Culong\u003E value1, Vector128\u003Culong\u003E value2);\r\n\r\n        public static unsafe void StorePairScalarNonTemporal(int* address, Vector64\u003Cint\u003E value1, Vector64\u003Cint\u003E value2);\r\n        public static unsafe void StorePairScalarNonTemporal(float* address, Vector64\u003Cfloat\u003E value1, Vector64\u003Cfloat\u003E value2);\r\n        public static unsafe void StorePairScalarNonTemporal(uint* address, Vector64\u003Cuint\u003E value1, Vector64\u003Cuint\u003E value2);\r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=0h44m11s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 36696,
      "IdFull": "dotnet/runtime#36696",
      "Title": "ARM Doubling Multiply intrinsics",
      "Author": "tannergooding",
      "CreatedAt": "2020-05-19T13:58:42+00:00",
      "DetailText": "dotnet/runtime#36696 41 days ago by tannergooding",
      "Url": "https://github.com/dotnet/runtime/issues/36696",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "arch-arm64",
          "BackgroundColor": "eb6420",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "area-System.Runtime.Intrinsics",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T17:57:38+00:00",
    "FeedbackId": "649730379",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/36696#issuecomment-649730379",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "* The TODO versions are also approved\r\n\r\n\u0060\u0060\u0060C#\r\nnamespace System.Runtime.Intrinsics.Arm\r\n{\r\n    public abstract class AdvSimd\r\n    {\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingSaturateHigh(Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingSaturateHigh(Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingSaturateHigh(Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingSaturateHigh(Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingSaturateHighScalar(Vector64\u003Cshort\u003E left, Vector64\u003Cshort\u003E right);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingSaturateHighScalar(Vector64\u003Cint\u003E   left, Vector64\u003Cint\u003E   right);\r\n\r\n        // TODO: Scalar BySelectedScalar variant\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingSaturateHigh(Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingSaturateHigh(Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingSaturateHigh(Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingSaturateHigh(Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingSaturateHighScalar(Vector64\u003Cshort\u003E left, Vector64\u003Cshort\u003E right);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingSaturateHighScalar(Vector64\u003Cint\u003E   left, Vector64\u003Cint\u003E   right);\r\n\r\n        // TODO: Scalar BySelectedScalar variant\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingWideningSaturateLower(Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingWideningSaturateLower(Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingWideningSaturateLower(Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingWideningSaturateLower(Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector64\u003Cshort\u003E  left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector64\u003Cint\u003E    left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector128\u003Cshort\u003E left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector128\u003Cint\u003E   left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingWideningLowerBySelectedScalarSaturate(Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingWideningSaturateLowerScalar(Vector64\u003Cshort\u003E left, Vector64\u003Cshort\u003E right);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingWideningSaturateLowerScalar(Vector64\u003Cint\u003E   left, Vector64\u003Cint\u003E   right);\r\n\r\n        // TODO: Scalar BySelectedScalar variant\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingAddWideningLowerSaturate(Vector64\u003Cshort\u003E  addend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingAddWideningLowerSaturate(Vector64\u003Cint\u003E    addend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingAddWideningLowerSaturate(Vector128\u003Cshort\u003E addend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingAddWideningLowerSaturate(Vector128\u003Cint\u003E   addend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector64\u003Cshort\u003E  addend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector64\u003Cint\u003E    addend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector64\u003Cshort\u003E  addend, Vector64\u003Cshort\u003E  left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector64\u003Cint\u003E    addend, Vector64\u003Cint\u003E    left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector128\u003Cshort\u003E addend, Vector128\u003Cshort\u003E left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector128\u003Cint\u003E   addend, Vector128\u003Cint\u003E   left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector128\u003Cshort\u003E addend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingAddWideningLowerBySelectedScalarSaturate(Vector128\u003Cint\u003E   addend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n\r\n        public static Vector64\u003Cshort\u003E MultiplyDoublingAddWideningLowerSaturateScalar(Vector64\u003Cshort\u003E addend, Vector64\u003Cshort\u003E left, Vector64\u003Cshort\u003E right);\r\n        public static Vector64\u003Cint\u003E   MultiplyDoublingAddWideningLowerSaturateScalar(Vector64\u003Cint\u003E   addend, Vector64\u003Cint\u003E   left, Vector64\u003Cint\u003E   right);\r\n\r\n        // TODO: Scalar BySelectedScalar variant\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingSubtractWideningLowerSaturate(Vector64\u003Cshort\u003E  minuend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingSubtractWideningLowerSaturate(Vector64\u003Cint\u003E    minuend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingSubtractWideningLowerSaturate(Vector128\u003Cshort\u003E minuend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingSubtractWideningLowerSaturate(Vector128\u003Cint\u003E   minuend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector64\u003Cshort\u003E  minuend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector64\u003Cint\u003E    minuend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector64\u003Cshort\u003E  minuend, Vector64\u003Cshort\u003E  left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector64\u003Cint\u003E    minuend, Vector64\u003Cint\u003E    left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector128\u003Cshort\u003E minuend, Vector128\u003Cshort\u003E left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector128\u003Cint\u003E   minuend, Vector128\u003Cint\u003E   left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector128\u003Cshort\u003E minuend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyDoublingSubtractWideningLowerBySelectedScalarSaturate(Vector128\u003Cint\u003E   minuend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyDoublingSubtractWideningLowerSaturateScalar(Vector64\u003Cshort\u003E minuend, Vector64\u003Cshort\u003E left, Vector64\u003Cshort\u003E right);\r\n        public static Vector64\u003Cint\u003E    MultiplyDoublingSubtractWideningLowerSaturateScalar(Vector64\u003Cint\u003E   minuend, Vector64\u003Cint\u003E   left, Vector64\u003Cint\u003E   right);\r\n\r\n        // TODO: Scalar BySelectedScalar variant\r\n    }\r\n\r\n    public abstract class Rdm : AdvSimd\r\n    {\r\n        public static bool IsSupported { get; }\r\n\r\n        // TODO: Scalar BySelectedScalar variant\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingAddSaturateHigh(Vector64\u003Cshort\u003E  addend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E   right);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingAddSaturateHigh(Vector64\u003Cint\u003E    addend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E     right);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingAddSaturateHigh(Vector128\u003Cshort\u003E addend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E  right);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingAddSaturateHigh(Vector128\u003Cint\u003E   addend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E    right);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  addend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    addend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  addend, Vector64\u003Cshort\u003E  left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    addend, Vector64\u003Cint\u003E    left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E addend, Vector128\u003Cshort\u003E left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   addend, Vector128\u003Cint\u003E   left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E addend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingAddBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   addend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingAddSaturateHighScalar(Vector64\u003Cshort\u003E addend, Vector64\u003Cshort\u003E left, Vector64\u003Cshort\u003E right);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingAddSaturateHighScalar(Vector64\u003Cint\u003E   addend, Vector64\u003Cint\u003E   left, Vector64\u003Cint\u003E right);\r\n\r\n        // TODO: Scalar BySelectedScalar variant\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingSubtractSaturateHigh(Vector64\u003Cshort\u003E  minuend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingSubtractSaturateHigh(Vector64\u003Cint\u003E    minuend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingSubtractSaturateHigh(Vector128\u003Cshort\u003E minuend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingSubtractSaturateHigh(Vector128\u003Cint\u003E   minuend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  minuend, Vector64\u003Cshort\u003E  left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    minuend, Vector64\u003Cint\u003E    left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector64\u003Cshort\u003E  minuend, Vector64\u003Cshort\u003E  left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector64\u003Cint\u003E    minuend, Vector64\u003Cint\u003E    left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E minuend, Vector128\u003Cshort\u003E left, Vector64\u003Cshort\u003E  right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   minuend, Vector128\u003Cint\u003E   left, Vector64\u003Cint\u003E    right, byte rightIndex);\r\n        public static Vector128\u003Cshort\u003E MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector128\u003Cshort\u003E minuend, Vector128\u003Cshort\u003E left, Vector128\u003Cshort\u003E right, byte rightIndex);\r\n        public static Vector128\u003Cint\u003E   MultiplyRoundedDoublingSubtractBySelectedScalarSaturateHigh(Vector128\u003Cint\u003E   minuend, Vector128\u003Cint\u003E   left, Vector128\u003Cint\u003E   right, byte rightIndex);\r\n\r\n        public static Vector64\u003Cshort\u003E  MultiplyRoundedDoublingSubtractSaturateHighScalar(Vector64\u003Cshort\u003E minuend, Vector64\u003Cshort\u003E left, Vector64\u003Cshort\u003E right);\r\n        public static Vector64\u003Cint\u003E    MultiplyRoundedDoublingSubtractSaturateHighScalar(Vector64\u003Cint\u003E   minuend, Vector64\u003Cint\u003E   left, Vector64\u003Cint\u003E   right);    \r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=0h47m33s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 37014,
      "IdFull": "dotnet/runtime#37014",
      "Title": "Remaining ARM Intrinsics",
      "Author": "tannergooding",
      "CreatedAt": "2020-05-26T15:41:49+00:00",
      "DetailText": "dotnet/runtime#37014 34 days ago by tannergooding",
      "Url": "https://github.com/dotnet/runtime/issues/37014",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "api-ready-for-review",
          "BackgroundColor": "5319e7",
          "Description": "API is ready for formal API review - https://github.com/dotnet/apireviews",
          "ForegroundColor": "white"
        },
        {
          "Name": "arch-arm64",
          "BackgroundColor": "eb6420",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "area-System.Runtime.Intrinsics",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "blocking",
          "BackgroundColor": "b60205",
          "Description": "Marks issues that we want to fast track in order to unblock other important work",
          "ForegroundColor": "white"
        }
      ],
      "IsBlocking": true
    },
    "FeedbackDateTime": "2020-06-25T18:28:54+00:00",
    "FeedbackId": "649746313",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/37014#issuecomment-649746313",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "label:blocking \r\n\r\n\u0060\u0060\u0060C#\r\nnamespace System.Runtime.Intrinsics.Arm\r\n{\r\n    public static class AdvSimd\r\n    {\r\n        public static unsafe (Vector64\u003Cbyte\u003E Value1,    Vector64\u003Cbyte\u003E Value2)    LoadPairVector64(byte*   address);\r\n        public static unsafe (Vector64\u003Csbyte\u003E Value1,   Vector64\u003Csbyte\u003E Value2)   LoadPairVector64(sbyte*  address);\r\n        public static unsafe (Vector64\u003Cshort\u003E Value1,   Vector64\u003Cshort\u003E Value2)   LoadPairVector64(short*  address);\r\n        public static unsafe (Vector64\u003Cushort\u003E Value1,  Vector64\u003Cushort\u003E Value2)  LoadPairVector64(ushort* address);\r\n        public static unsafe (Vector64\u003Cint\u003E Value1,     Vector64\u003Cint\u003E Value2)     LoadPairVector64(int*    address);\r\n        public static unsafe (Vector64\u003Cuint\u003E Value1,    Vector64\u003Cuint\u003E Value2)    LoadPairVector64(uint*   address);\r\n        public static unsafe (Vector64\u003Cfloat\u003E Value1,   Vector64\u003Cfloat\u003E Value2)   LoadPairVector64(float*  address);\r\n\r\n        public static unsafe (Vector128\u003Cbyte\u003E Value1,   Vector128\u003Cbyte\u003E Value2)   LoadPairVector128(byte*   address);\r\n        public static unsafe (Vector128\u003Csbyte\u003E Value1,  Vector128\u003Csbyte\u003E Value2)  LoadPairVector128(sbyte*  address);\r\n        public static unsafe (Vector128\u003Cshort\u003E Value1,  Vector128\u003Cshort\u003E Value2)  LoadPairVector128(short*  address);\r\n        public static unsafe (Vector128\u003Cushort\u003E Value1, Vector128\u003Cushort\u003E Value2) LoadPairVector128(ushort* address);\r\n        public static unsafe (Vector128\u003Cint\u003E Value1,    Vector128\u003Cint\u003E Value2)    LoadPairVector128(int*    address);\r\n        public static unsafe (Vector128\u003Cuint\u003E Value1,   Vector128\u003Cuint\u003E Value2)   LoadPairVector128(uint*   address);\r\n        public static unsafe (Vector128\u003Clong\u003E Value1,   Vector128\u003Clong\u003E Value2)   LoadPairVector128(long*   address);\r\n        public static unsafe (Vector128\u003Culong\u003E Value1,  Vector128\u003Culong\u003E Value2)  LoadPairVector128(ulong*  address);\r\n        public static unsafe (Vector128\u003Cfloat\u003E Value1,  Vector128\u003Cfloat\u003E Value2)  LoadPairVector128(float*  address);\r\n\r\n        public static unsafe (Vector64\u003Cint\u003E Value1,     Vector64\u003Cint\u003E Value2)     LoadPairScalarVector64(int*  address);\r\n        public static unsafe (Vector64\u003Cuint\u003E Value1,    Vector64\u003Cuint\u003E Value2)    LoadPairScalarVector64(uint* address);\r\n        public static unsafe (Vector64\u003Clong\u003E Value1,    Vector64\u003Clong\u003E Value2)    LoadPairScalarVector64(long*  address);\r\n        public static unsafe (Vector64\u003Culong\u003E Value1,   Vector64\u003Culong\u003E Value2)   LoadPairScalarVector64(ulong* address);\r\n        public static unsafe (Vector64\u003Cfloat\u003E Value1,   Vector64\u003Cfloat\u003E Value2)   LoadPairScalarVector64(float* address);\r\n        public static unsafe (Vector64\u003Cdouble\u003E Value1,  Vector64\u003Cdouble\u003E Value2)  LoadPairScalarVector64(double* address);\r\n\r\n        public static unsafe (Vector64\u003Cbyte\u003E Value1,    Vector64\u003Cbyte\u003E Value2)    LoadPairVector64NonTemporal(byte*   address);\r\n        public static unsafe (Vector64\u003Csbyte\u003E Value1,   Vector64\u003Csbyte\u003E Value2)   LoadPairVector64NonTemporal(sbyte*  address);\r\n        public static unsafe (Vector64\u003Cshort\u003E Value1,   Vector64\u003Cshort\u003E Value2)   LoadPairVector64NonTemporal(short*  address);\r\n        public static unsafe (Vector64\u003Cushort\u003E Value1,  Vector64\u003Cushort\u003E Value2)  LoadPairVector64NonTemporal(ushort* address);\r\n        public static unsafe (Vector64\u003Cint\u003E Value1,     Vector64\u003Cint\u003E Value2)     LoadPairVector64NonTemporal(int*    address);\r\n        public static unsafe (Vector64\u003Cuint\u003E Value1,    Vector64\u003Cuint\u003E Value2)    LoadPairVector64NonTemporal(uint*   address);\r\n        public static unsafe (Vector64\u003Cfloat\u003E Value1,   Vector64\u003Cfloat\u003E Value2)   LoadPairVector64NonTemporal(float*  address);\r\n\r\n        public static unsafe (Vector128\u003Cbyte\u003E Value1,   Vector128\u003Cbyte\u003E Value2)   LoadPairVector128NonTemporal(byte*   address);\r\n        public static unsafe (Vector128\u003Csbyte\u003E Value1,  Vector128\u003Csbyte\u003E Value2)  LoadPairVector128NonTemporal(sbyte*  address);\r\n        public static unsafe (Vector128\u003Cshort\u003E Value1,  Vector128\u003Cshort\u003E Value2)  LoadPairVector128NonTemporal(short*  address);\r\n        public static unsafe (Vector128\u003Cushort\u003E Value1, Vector128\u003Cushort\u003E Value2) LoadPairVector128NonTemporal(ushort* address);\r\n        public static unsafe (Vector128\u003Cint\u003E Value1,    Vector128\u003Cint\u003E Value2)    LoadPairVector128NonTemporal(int*    address);\r\n        public static unsafe (Vector128\u003Cuint\u003E Value1,   Vector128\u003Cuint\u003E Value2)   LoadPairVector128NonTemporal(uint*   address);\r\n        public static unsafe (Vector128\u003Clong\u003E Value1,   Vector128\u003Clong\u003E Value2)   LoadPairVector128NonTemporal(long*   address);\r\n        public static unsafe (Vector128\u003Culong\u003E Value1,  Vector128\u003Culong\u003E Value2)  LoadPairVector128NonTemporal(ulong*  address);\r\n        public static unsafe (Vector128\u003Cfloat\u003E Value1,  Vector128\u003Cfloat\u003E Value2)  LoadPairVector128NonTemporal(float*  address);\r\n\r\n        public static unsafe (Vector64\u003Cint\u003E Value1,     Vector64\u003Cint\u003E Value2)     LoadPairScalarVector64NonTemporal(int*  address);\r\n        public static unsafe (Vector64\u003Cuint\u003E Value1,    Vector64\u003Cuint\u003E Value2)    LoadPairScalarVector64NonTemporal(uint* address);\r\n        public static unsafe (Vector64\u003Clong\u003E Value1,    Vector64\u003Clong\u003E Value2)    LoadPairScalarVector64NonTemporal(long*  address);\r\n        public static unsafe (Vector64\u003Culong\u003E Value1,   Vector64\u003Culong\u003E Value2)   LoadPairScalarVector64NonTemporal(ulong* address);\r\n        public static unsafe (Vector64\u003Cfloat\u003E Value1,   Vector64\u003Cfloat\u003E Value2)   LoadPairScalarVector64NonTemporal(float* address);\r\n        public static unsafe (Vector64\u003Cdouble\u003E Value1,  Vector64\u003Cdouble\u003E Value2)  LoadPairScalarVector64NonTemporal(double* address);\r\n\r\n        public static Vector64\u003Csbyte\u003E   ExtractNarrowingSaturateLower(Vector128\u003Cshort\u003E  value);\r\n        public static Vector64\u003Cshort\u003E   ExtractNarrowingSaturateLower(Vector128\u003Cint\u003E    value);\r\n        public static Vector64\u003Cint\u003E     ExtractNarrowingSaturateLower(Vector128\u003Clong\u003E   value);\r\n        public static Vector128\u003Csbyte\u003E  ExtractNarrowingSaturateUpper(Vector64\u003Cshort\u003E   lower, Vector128\u003Cshort\u003E  value);\r\n        public static Vector128\u003Cshort\u003E  ExtractNarrowingSaturateUpper(Vector64\u003Cint\u003E     lower, Vector128\u003Cint\u003E    value);\r\n        public static Vector128\u003Cint\u003E    ExtractNarrowingSaturateUpper(Vector64\u003Clong\u003E    lower, Vector128\u003Clong\u003E   value);\r\n\r\n        public static Vector64\u003Cbyte\u003E    ExtractNarrowingSaturateLower(Vector128\u003Cushort\u003E value);\r\n        public static Vector64\u003Cushort\u003E  ExtractNarrowingSaturateLower(Vector128\u003Cuint\u003E   value);\r\n        public static Vector64\u003Cuint\u003E    ExtractNarrowingSaturateLower(Vector128\u003Culong\u003E  value);\r\n        public static Vector128\u003Cbyte\u003E   ExtractNarrowingSaturateUpper(Vector64\u003Cushort\u003E  lower, Vector128\u003Cushort\u003E value);\r\n        public static Vector128\u003Cushort\u003E ExtractNarrowingSaturateUpper(Vector64\u003Cuint\u003E    lower, Vector128\u003Cuint\u003E   value);\r\n        public static Vector128\u003Cuint\u003E   ExtractNarrowingSaturateUpper(Vector64\u003Culong\u003E   lower, Vector128\u003Culong\u003E  value);\r\n\r\n        public static Vector64\u003Cbyte\u003E    ExtractNarrowingSaturateUnsignedLower(Vector128\u003Cshort\u003E value);\r\n        public static Vector64\u003Cushort\u003E  ExtractNarrowingSaturateUnsignedLower(Vector128\u003Cint\u003E   value);\r\n        public static Vector64\u003Cuint\u003E    ExtractNarrowingSaturateUnsignedLower(Vector128\u003Clong\u003E  value);\r\n        public static Vector128\u003Cbyte\u003E   ExtractNarrowingSaturateUnsignedUpper(Vector64\u003Cshort\u003E  lower, Vector128\u003Cshort\u003E value);\r\n        public static Vector128\u003Cushort\u003E ExtractNarrowingSaturateUnsignedUpper(Vector64\u003Cint\u003E    lower, Vector128\u003Cint\u003E   value);\r\n        public static Vector128\u003Cuint\u003E   ExtractNarrowingSaturateUnsignedUpper(Vector64\u003Clong\u003E   lower, Vector128\u003Clong\u003E  value);\r\n\r\n        public static Vector64\u003Cushort\u003E  ReverseElement8(Vector64\u003Cushort\u003E  value);\r\n        public static Vector64\u003Cshort\u003E   ReverseElement8(Vector64\u003Cshort\u003E   value);\r\n        public static Vector128\u003Cushort\u003E ReverseElement8(Vector128\u003Cushort\u003E value);\r\n        public static Vector128\u003Cshort\u003E  ReverseElement8(Vector128\u003Cshort\u003E  value);\r\n\r\n        public static Vector64\u003Cuint\u003E    ReverseElement8(Vector64\u003Cuint\u003E    value);\r\n        public static Vector64\u003Cint\u003E     ReverseElement8(Vector64\u003Cint\u003E     value);\r\n        public static Vector64\u003Cfloat\u003E   ReverseElement8(Vector64\u003Cfloat\u003E   value);\r\n        public static Vector128\u003Cuint\u003E   ReverseElement8(Vector128\u003Cuint\u003E   value);\r\n        public static Vector128\u003Cint\u003E    ReverseElement8(Vector128\u003Cint\u003E    value);\r\n\r\n        public static Vector128\u003Culong\u003E  ReverseElement8(Vector64\u003Culong\u003E   value);\r\n        public static Vector128\u003Clong\u003E   ReverseElement8(Vector64\u003Clong\u003E    value);\r\n        public static Vector128\u003Culong\u003E  ReverseElement8(Vector128\u003Culong\u003E  value);\r\n        public static Vector128\u003Clong\u003E   ReverseElement8(Vector128\u003Clong\u003E   value);\r\n\r\n        public static Vector64\u003Cuint\u003E    ReverseElement16(Vector64\u003Cuint\u003E    value);\r\n        public static Vector64\u003Cint\u003E     ReverseElement16(Vector64\u003Cint\u003E     value);\r\n        public static Vector64\u003Cfloat\u003E   ReverseElement16(Vector64\u003Cfloat\u003E   value);\r\n        public static Vector128\u003Cuint\u003E   ReverseElement16(Vector128\u003Cuint\u003E   value);\r\n        public static Vector128\u003Cint\u003E    ReverseElement16(Vector128\u003Cint\u003E    value);\r\n\r\n        public static Vector128\u003Culong\u003E  ReverseElement16(Vector64\u003Culong\u003E   value);\r\n        public static Vector128\u003Clong\u003E   ReverseElement16(Vector64\u003Clong\u003E    value);\r\n        public static Vector128\u003Culong\u003E  ReverseElement16(Vector128\u003Culong\u003E  value);\r\n        public static Vector128\u003Clong\u003E   ReverseElement16(Vector128\u003Clong\u003E   value);\r\n\r\n        public static Vector128\u003Culong\u003E  ReverseElement32(Vector64\u003Culong\u003E   value);\r\n        public static Vector128\u003Clong\u003E   ReverseElement32(Vector64\u003Clong\u003E    value);\r\n        public static Vector128\u003Culong\u003E  ReverseElement32(Vector128\u003Culong\u003E  value);\r\n        public static Vector128\u003Clong\u003E   ReverseElement32(Vector128\u003Clong\u003E   value);\r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=1h3m48s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 38137,
      "IdFull": "dotnet/runtime#38137",
      "Title": "[Arm64] ASIMD InsertScalar",
      "Author": "echesakovMSFT",
      "CreatedAt": "2020-06-19T00:49:48+00:00",
      "DetailText": "dotnet/runtime#38137 10 days ago by echesakovMSFT",
      "Url": "https://github.com/dotnet/runtime/issues/38137",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "arch-arm64",
          "BackgroundColor": "eb6420",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "area-System.Runtime.Intrinsics",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T18:41:43+00:00",
    "FeedbackId": "649751957",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/38137#issuecomment-649751957",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "\u0060\u0060\u0060C#\r\nnamespace System.Runtime.Intrinsics.Arm\r\n{\r\n    public static class AdvSimd\r\n    {\r\n        public static Vector128\u003Cdouble\u003E InsertScalar(Vector128\u003Cdouble\u003E result, byte resultIndex, Vector64\u003Cdouble\u003E value);\r\n        public static Vector128\u003Clong\u003E   InsertScalar(Vector128\u003Clong\u003E   result, byte resultIndex, Vector64\u003Clong\u003E   value);\r\n        public static Vector128\u003Culong\u003E  InsertScalar(Vector128\u003Culong\u003E  result, byte resultIndex, Vector64\u003Culong\u003E  value);\r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=1h35m4s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 37169,
      "IdFull": "dotnet/runtime#37169",
      "Title": "[Arm64] SIMD dot product",
      "Author": "echesakovMSFT",
      "CreatedAt": "2020-05-29T18:14:50+00:00",
      "DetailText": "dotnet/runtime#37169 31 days ago by echesakovMSFT",
      "Url": "https://github.com/dotnet/runtime/issues/37169",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "arch-arm64",
          "BackgroundColor": "eb6420",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "area-System.Runtime.Intrinsics",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T18:46:14+00:00",
    "FeedbackId": "649754359",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/37169#issuecomment-649754359",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "\u0060\u0060\u0060C#\r\nnamespace System.Runtime.Intrinsics.Arm\r\n{\r\n    public abstract class Dp : AdvSimd\r\n    {\r\n        public static bool IsSupported { get; }\r\n\r\n        public static Vector64\u003Cint\u003E   DotProduct(Vector64\u003Cint\u003E   addend, Vector64\u003Csbyte\u003E  left, Vector64\u003Csbyte\u003E  right);\r\n        public static Vector64\u003Cuint\u003E  DotProduct(Vector64\u003Cuint\u003E  addend, Vector64\u003Cbyte\u003E   left, Vector64\u003Cbyte\u003E   right);\r\n        public static Vector128\u003Cint\u003E  DotProduct(Vector128\u003Cint\u003E  addend, Vector128\u003Csbyte\u003E left, Vector128\u003Csbyte\u003E right);\r\n        public static Vector128\u003Cuint\u003E DotProduct(Vector128\u003Cuint\u003E addend, Vector128\u003Cbyte\u003E  left, Vector128\u003Cbyte\u003E  right);\r\n\r\n        public static Vector64\u003Cint\u003E   DotProductBySelectedQuadruplet(Vector64\u003Cint\u003E   addend, Vector64\u003Csbyte\u003E  left, Vector64\u003Csbyte\u003E  right, byte rightScaledIndex);\r\n        public static Vector64\u003Cint\u003E   DotProductBySelectedQuadruplet(Vector64\u003Cint\u003E   addend, Vector64\u003Csbyte\u003E  left, Vector128\u003Csbyte\u003E right, byte rightScaledIndex);\r\n        public static Vector64\u003Cuint\u003E  DotProductBySelectedQuadruplet(Vector64\u003Cuint\u003E  addend, Vector64\u003Cbyte\u003E   left, Vector64\u003Cbyte\u003E   right, byte rightScaledIndex);\r\n        public static Vector64\u003Cuint\u003E  DotProductBySelectedQuadruplet(Vector64\u003Cuint\u003E  addend, Vector64\u003Cbyte\u003E   left, Vector128\u003Cbyte\u003E  right, byte rightScaledIndex);\r\n        public static Vector128\u003Cint\u003E  DotProductBySelectedQuadruplet(Vector128\u003Cint\u003E  addend, Vector128\u003Csbyte\u003E left, Vector128\u003Csbyte\u003E right, byte rightScaledIndex);\r\n        public static Vector128\u003Cint\u003E  DotProductBySelectedQuadruplet(Vector128\u003Cint\u003E  addend, Vector128\u003Csbyte\u003E left, Vector64\u003Csbyte\u003E  right, byte rightScaledIndex);\r\n        public static Vector128\u003Cuint\u003E DotProductBySelectedQuadruplet(Vector128\u003Cuint\u003E addend, Vector128\u003Cbyte\u003E  left, Vector128\u003Cbyte\u003E  right, byte rightScaledIndex);\r\n        public static Vector128\u003Cuint\u003E DotProductBySelectedQuadruplet(Vector128\u003Cuint\u003E addend, Vector128\u003Cbyte\u003E  left, Vector64\u003Cbyte\u003E   right, byte rightScaledIndex);\r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=1h47m53s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 38348,
      "IdFull": "dotnet/runtime#38348",
      "Title": "Allow creating more cryptographic objects from ReadOnlySpan\u003Cbyte\u003E",
      "Author": "bartonjs",
      "CreatedAt": "2020-06-24T18:25:51+00:00",
      "DetailText": "dotnet/runtime#38348 5 days ago by bartonjs",
      "Url": "https://github.com/dotnet/runtime/issues/38348",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "area-System.Security",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T18:57:17+00:00",
    "FeedbackId": "649759447",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/38348#issuecomment-649759447",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "* Looks good as proposed\r\n\r\n\u0060\u0060\u0060diff\r\nnamespace System.Security.Cryptography\r\n{\r\n    partial class AsnEncodedData\r\n    {\r\n        protected AsnEncodedData() { }\r\n        public AsnEncodedData(byte[] rawData) { }\r\n\u002B       public AsnEncodedData(System.ReadOnlySpan\u003Cbyte\u003E rawData) { }\r\n        public AsnEncodedData(System.Security.Cryptography.AsnEncodedData asnEncodedData) { }\r\n        public AsnEncodedData(System.Security.Cryptography.Oid? oid, byte[] rawData) { }\r\n\u002B       public AsnEncodedData(System.Security.Cryptography.Oid? oid, System.ReadOnlySpan\u003Cbyte\u003E rawData) { }\r\n        public AsnEncodedData(string oid, byte[] rawData) { }\r\n\u002B       public AsnEncodedData(string oid, System.ReadOnlySpan\u003Cbyte\u003E rawData) { }\r\n    }\r\n}\r\n\r\nnamespace System.Security.Cryptography.Pkcs\r\n{\r\n    partial class ContentInfo\r\n    {\r\n        public static System.Security.Cryptography.Oid GetContentType(byte[] encodedMessage) { throw null; }\r\n\u002B       public static System.Security.Cryptography.Oid GetContentType(ReadOnlySpan\u003Cbyte\u003E encodedMessage) { throw null; }\r\n    }\r\n\r\n    partial class EnvelopedCms\r\n    {\r\n        public void Decode(byte[] encodedMessage) { }\r\n\u002B       public void Decode(System.ReadOnlySpan\u003Cbyte\u003E encodedMessage) { }\r\n    }\r\n\r\n    partial class SignedCms\r\n    {\r\n        public void Decode(byte[] encodedMessage) { }\r\n\u002B       public void Decode(System.ReadOnlySpan\u003Cbyte\u003E encodedMessage) { }\r\n     }\r\n}\r\n\r\nnamespace System.Security.Cryptography.X509Certificates\r\n{\r\n    partial class CertificateRequest\r\n    {\r\n        public System.Security.Cryptography.X509Certificates.X509Certificate2 Create(\r\n            System.Security.Cryptography.X509Certificates.X500DistinguishedName issuerName,\r\n            System.Security.Cryptography.X509Certificates.X509SignatureGenerator generator,\r\n            System.DateTimeOffset notBefore,\r\n            System.DateTimeOffset notAfter,\r\n            byte[] serialNumber) { throw null; }\r\n\u002B       public System.Security.Cryptography.X509Certificates.X509Certificate2 Create(\r\n\u002B           System.Security.Cryptography.X509Certificates.X500DistinguishedName issuerName,\r\n\u002B           System.Security.Cryptography.X509Certificates.X509SignatureGenerator generator,\r\n\u002B           System.DateTimeOffset notBefore,\r\n\u002B           System.DateTimeOffset notAfter,\r\n\u002B           System.ReadOnlySpan\u003Cbyte\u003E serialNumber) { throw null; }\r\n        public System.Security.Cryptography.X509Certificates.X509Certificate2 Create(\r\n            System.Security.Cryptography.X509Certificates.X509Certificate2 issuerCertificate,\r\n            System.DateTimeOffset notBefore,\r\n            System.DateTimeOffset notAfter,\r\n            byte[] serialNumber) { throw null; }\r\n\u002B       public System.Security.Cryptography.X509Certificates.X509Certificate2 Create(\r\n\u002B           System.Security.Cryptography.X509Certificates.X509Certificate2 issuerCertificate,\r\n\u002B           System.DateTimeOffset notBefore,\r\n\u002B           System.DateTimeOffset notAfter,\r\n\u002B           System.ReadOnlySpan\u003Cbyte\u003E serialNumber) { throw null; }\r\n    }\r\n\r\n    partial class X500DistinguishedName : System.Security.Cryptography.AsnEncodedData\r\n    {\r\n        public X500DistinguishedName(byte[] encodedDistinguishedName) { }\r\n\u002B       public X500DistinguishedName(System.ReadOnlySpan\u003Cbyte\u003E encodedDistinguishedName) { }\r\n        public X500DistinguishedName(System.Security.Cryptography.AsnEncodedData encodedDistinguishedName) { }\r\n        public X500DistinguishedName(\r\n            System.Security.Cryptography.X509Certificates.X500DistinguishedName distinguishedName) { }\r\n        public X500DistinguishedName(string distinguishedName) { }\r\n        public X500DistinguishedName(\r\n            string distinguishedName,\r\n            System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags flag) { }\r\n    }\r\n\r\n    partial class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate\r\n    {\r\n        public X509Certificate2() { }\r\n        public X509Certificate2(byte[] rawData) { }\r\n        [System.CLSCompliantAttribute(false)]\r\n        public X509Certificate2(byte[] rawData, System.Security.SecureString? password) { }\r\n        [System.CLSCompliantAttribute(false)]\r\n        public X509Certificate2(\r\n            byte[] rawData,\r\n            System.Security.SecureString? password,\r\n            System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) { }\r\n        public X509Certificate2(byte[] rawData, string? password) { }\r\n        public X509Certificate2(\r\n            byte[] rawData,\r\n            string? password,\r\n            System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) { }\r\n        public X509Certificate2(System.IntPtr handle) { }\r\n\u002B       public X509Certificate2(System.ReadOnlySpan\u003Cbyte\u003E rawData) { }\r\n\u002B       public X509Certificate2(\r\n\u002B           System.ReadOnlySpan\u003Cbyte\u003E rawData,\r\n\u002B           System.ReadOnlySpan\u003Cchar\u003E password,\r\n\u002B           X509KeyStorageFlags keyStorageFlags = X509KeyStorageFlags.DefaultKeySet) { }\r\n        protected X509Certificate2(\r\n            System.Runtime.Serialization.SerializationInfo info,\r\n            System.Runtime.Serialization.StreamingContext context) { }\r\n        public X509Certificate2(System.Security.Cryptography.X509Certificates.X509Certificate certificate) { }\r\n        public X509Certificate2(string fileName) { }\r\n\u002B       public X509Certificate2(\r\n\u002B           string fileName,\r\n\u002B           System.ReadOnlySpan\u003Cchar\u003E password,\r\n\u002B           X509KeyStorageFlags keyStorageFlags = X509KeyStorageFlags.DefaultKeySet) { }\r\n        [System.CLSCompliantAttribute(false)]\r\n        public X509Certificate2(string fileName, System.Security.SecureString? password) { }\r\n        [System.CLSCompliantAttribute(false)]\r\n        public X509Certificate2(\r\n            string fileName,\r\n            System.Security.SecureString? password,\r\n            System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) { }\r\n        public X509Certificate2(string fileName, string? password) { }\r\n        public X509Certificate2(\r\n            string fileName,\r\n            string? password,\r\n            System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) { }\r\n        public static X509ContentType GetCertContentType(byte[] rawData) { throw null; }\r\n\u002B       public static X509ContentType GetCertContentType(System.ReadOnlySpan\u003Cbyte\u003E rawData) { throw null; }\r\n        public static X509ContentType GetCertContentType(string fileName) { throw null; }\r\n    }\r\n\r\n    partial class X509Certificate2Collection\r\n    {\r\n        public void Import(byte[] rawData) { }\r\n        public void Import(\r\n            byte[] rawData,\r\n            string? password,\r\n-           X509KeyStorageFlags keyStorageFlags) { }\r\n\u002B           X509KeyStorageFlags keyStorageFlags = X509KeyStorageFlags.DefaultKeySet) { }\r\n\u002B       public void Import(System.ReadOnlySpan\u003Cbyte\u003E rawData) { }\r\n\u002B       public void Import(\r\n\u002B           System.ReadOnlySpan\u003Cbyte\u003E rawData,\r\n\u002B           System.ReadOnlySpan\u003Cchar\u003E password,\r\n\u002B           X509KeyStorageFlags keyStorageFlags = X509KeyStorageFlags.DefaultKeySet) { }\r\n        public void Import(string fileName) { }\r\n\u002B       public void Import(\r\n\u002B           string fileName,\r\n\u002B           System.ReadOnlySpan\u003Cbyte\u003E password,\r\n\u002B           X509KeyStorageFlags keyStorageFlags = X509KeyStorageFlags.DefaultKeySet) { }\r\n        public void Import(\r\n            string fileName,\r\n            string? password,\r\n-           X509KeyStorageFlags keyStorageFlags) { }\r\n\u002B           X509KeyStorageFlags keyStorageFlags = X509KeyStorageFlags.DefaultKeySet) { }\r\n    }\r\n\r\n    partial class X509Extension : System.Security.Cryptography.AsnEncodedData\r\n        protected X509Extension() { }\r\n        public X509Extension(System.Security.Cryptography.AsnEncodedData encodedExtension, bool critical) { }\r\n        public X509Extension(System.Security.Cryptography.Oid oid, byte[] rawData, bool critical) { }\r\n\u002B       public X509Extension(System.Security.Cryptography.Oid oid, System.ReadOnlySpan\u003Cbyte\u003E rawData, bool critical) { }\r\n        public X509Extension(string oid, byte[] rawData, bool critical) { }\r\n\u002B       public X509Extension(string oid, System.ReadOnlySpan\u003Cbyte\u003E rawData, bool critical) { }\r\n    }\r\n\r\n    partial class X509SubjectKeyIdentifierExtension : System.Security.Cryptography.X509Certificates.X509Extension\r\n    {\r\n        public X509SubjectKeyIdentifierExtension() { }\r\n        public X509SubjectKeyIdentifierExtension(byte[] subjectKeyIdentifier, bool critical) { }\r\n\u002B       public X509SubjectKeyIdentifierExtension(System.ReadOnlySpan\u003Cbyte\u003E subjectKeyIdentifier, bool critical) { }\r\n        public X509SubjectKeyIdentifierExtension(System.Security.Cryptography.AsnEncodedData encodedSubjectKeyIdentifier, bool critical) { }\r\n        public X509SubjectKeyIdentifierExtension(System.Security.Cryptography.X509Certificates.PublicKey key, bool critical) { }\r\n        public X509SubjectKeyIdentifierExtension(System.Security.Cryptography.X509Certificates.PublicKey key, System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm algorithm, bool critical) { }\r\n        public X509SubjectKeyIdentifierExtension(string subjectKeyIdentifier, bool critical) { }\r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=1h52m24s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 36105,
      "IdFull": "dotnet/runtime#36105",
      "Title": "Implement CachedBitmap functionality in System.Drawing",
      "Author": "reflectronic",
      "CreatedAt": "2020-05-08T08:18:28+00:00",
      "DetailText": "dotnet/runtime#36105 52 days ago by reflectronic",
      "Url": "https://github.com/dotnet/runtime/issues/36105",
      "Milestone": "Future",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "area-System.Drawing",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-25T19:01:48+00:00",
    "FeedbackId": "649761495",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/36105#issuecomment-649761495",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "* Looks good as proposed\r\n\r\n\u0060\u0060\u0060diff\r\nnamespace System.Drawing.Imaging\r\n{\r\n\u002B   public sealed class CachedBitmap : MarshalByRefObject, IDisposable\r\n\u002B   {\r\n\u002B       public CachedBitmap(Bitmap bitmap, Graphics graphics);\r\n\u002B       public void Dispose();  \r\n\u002B   }\r\n} \r\n\r\nnamespace System.Drawing\r\n{\r\n    public sealed class Graphics : MarshalByRefObject, IDisposable, IDeviceContext\r\n    {\r\n\u002B       public void DrawCachedBitmap(CachedBitmap cachedBitmap, int x, int y);   \r\n    }\r\n}\r\n\u0060\u0060\u0060",
    "VideoUrl": "https://www.youtube.com/watch?v=rx_098IdZU0\u0026t=2h3m27s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 33331,
      "IdFull": "dotnet/runtime#33331",
      "Title": "Guarding calls to platform-specific APIs",
      "Author": "terrajobst",
      "CreatedAt": "2020-03-07T06:36:32+00:00",
      "DetailText": "dotnet/runtime#33331 114 days ago by terrajobst",
      "Url": "https://github.com/dotnet/runtime/issues/33331",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "area-System.Runtime",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-26T18:21:02+00:00",
    "FeedbackId": "650326500",
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/33331#issuecomment-650326500",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": "* We should rename \u0060TargetPlatformMinVersion\u0060\r\n    - It\u0027s a runtime concept, not a targeting concept\r\n* Can we change \u0060Platform\u0060 to \u0060OS\u0060?\r\n* \u0060MinimumPlatform\u0060 -\u003E \u0060MinimumOSPlatform\u0060\r\n* \u0060PlatformAttribute\u0060 should have an internal constructor\r\n* Add \u0060ObsoletedInPlatformAttribute.Message\u0060\r\n* \u0060RuntimeInformation\u0060\r\n    - \u0060IsOSPlatformOrLater\u0060 should also take a \u0060string\u0060\r\n    - \u0060IsOSPlatformEarlierThan\u0060 should also take a \u0060string\u0060\r\n    - The \u0060IsPlatformXXx\u0060 methods should be recognized by the JIT to be constant\r\n* \u0060OSPlatform\u0060\r\n    - Hide \u0060OSX\u0060\r\n    - Add \u0060macOS\u0060\r\n* Analyzer\r\n    - The analyzer should handle \u0060Debug.Assert\u0060 for these methods\r\n    - Should we support helpers methods? We concluded we don\u0027t need it yet",
    "VideoUrl": "https://www.youtube.com/watch?v=R5G4scTRRNQ\u0026t=0h0m0s"
  },
  {
    "Issue": {
      "Owner": "dotnet",
      "Repo": "runtime",
      "Id": 37359,
      "IdFull": "dotnet/runtime#37359",
      "Title": "OS compatibility analyzer",
      "Author": "buyaa-n",
      "CreatedAt": "2020-06-03T17:43:28+00:00",
      "DetailText": "dotnet/runtime#37359 26 days ago by buyaa-n",
      "Url": "https://github.com/dotnet/runtime/issues/37359",
      "Milestone": "5.0.0",
      "Labels": [
        {
          "Name": "api-approved",
          "BackgroundColor": "159818",
          "Description": "API was approved in API review, it can be implemented",
          "ForegroundColor": "white"
        },
        {
          "Name": "area-Meta",
          "BackgroundColor": "d4c5f9",
          "Description": null,
          "ForegroundColor": "black"
        },
        {
          "Name": "code-analyzer",
          "BackgroundColor": "0f46ad",
          "Description": "Marks an issue that suggests a Roslyn analyzer",
          "ForegroundColor": "white"
        },
        {
          "Name": "code-fixer",
          "BackgroundColor": "0f46ad",
          "Description": "Marks an issue that suggests a Roslyn code fixer",
          "ForegroundColor": "white"
        }
      ],
      "IsBlocking": false
    },
    "FeedbackDateTime": "2020-06-26T18:57:41+00:00",
    "FeedbackId": null,
    "FeedbackAuthor": "terrajobst",
    "FeedbackUrl": "https://github.com/dotnet/runtime/issues/37359",
    "FeedbackStatus": 0,
    "FeedbackMarkdown": null,
    "VideoUrl": null
  }
]